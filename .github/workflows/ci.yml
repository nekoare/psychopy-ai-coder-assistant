name: CI & Release

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {}

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install package (no extras)
        run: |
          python -m pip install --upgrade pip
          python -m pip install .
      - name: Install dev dependencies
        run: |
          python -m pip install pytest pytest-cov
      - name: Run tests
        run: |
          pytest

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip build twine
      - name: Build distribution
        run: |
          python -m build
          twine check dist/*
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          if [ -z "$TWINE_PASSWORD" ]; then
            echo "PYPI_API_TOKEN not set; skipping upload" && exit 0
          fi
          python -m twine upload dist/*
      - name: Artifact upload
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/*